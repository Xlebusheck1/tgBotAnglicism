import telebot
import requests
import yadisk
import logging
import os
from datetime import datetime
import time
from dotenv import load_dotenv

yadisktoken = os.getenv("YADISK_TOKEN")
tgbottoken = os.getenv("TELEBOT_TOKEN")
yacloudtoken = os.getenv("YACLOUD_TOKEN")

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    filename='bot_errors.log'
)
logger = logging.getLogger(__name__)

try:
    disk = yadisk.YaDisk(token=yadisktoken)
    if not disk.check_token():
        logger.error("–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞")
        disk = None  
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É: {e}")
    disk = None

class Message:    
    def __init__(self, userText):
        self.userText = userText    
    def GetMessage(self):
        return self.userText
    def SetMessage(self, text):
        self.userText = text   

bot = telebot.TeleBot(tgbottoken)
question = Message("")
answer = Message("")
localReviewsName = "reviews.txt"

statringText = '''
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HR-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ –ò–Ω—Ñ–æ –ú–æ—Ç—è  üá∑üá∫‚ú®  

‚ùå¬´–ü–ª–∞–Ω–∏—Ä—É–µ–º –¥–µ–º–æ –¥–ª—è —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–æ–≤¬ª ‚Äî –∑–Ω–∞–∫–æ–º–æ? 
–ù–∞—à –±–æ—Ç –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ç–∞–∫–∏–µ —Ñ—Ä–∞–∑—ã –≤:  
‚úÖ¬´–ü–æ–∫–∞–∂–µ–º –ø—Ä–æ–µ–∫—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–º —Å—Ç–æ—Ä–æ–Ω–∞–º¬ª ‚Äî –∫–æ—Ä–æ—Ç–∫–æ –∏ —è—Å–Ω–æ.  

–ö–∞–∫ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º?
üí´ –£–ø—Ä–æ—â–µ–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏‚Äî –º–µ–Ω—å—à–µ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –≤ —á–∞—Ç–∞—Ö,  
üí´ –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –∏ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
üí´ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è—Ö –æ—Ç —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π
üí´ –ß–∏—Å—Ç–æ—Ç–∞ —è–∑—ã–∫–∞ ‚Äî –±–µ–∑ —Å–ª–µ–ø–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–≥–ª–∏—Ü–∏–∑–º–æ–≤.  

–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã üîç:  
‚Ä¢ ¬´–ó–∞–∞–ø—Ä—É–≤—å—Ç–µ –±—é–¥–∂–µ—Ç¬ª‚Üí ¬´–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—é–¥–∂–µ—Ç¬ª 
‚Ä¢ ¬´–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞ —Ä–µ–∫—Ä—É—Ç–µ—Ä–µ¬ª ‚Üí ¬´–ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –ø–æ–∏—Å–∫–µ¬ª

–î–∞–≤–∞–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ ‚Äî –±–µ–∑ –±–∞—Ä—å–µ—Ä–æ–≤! üöÄ  

‚ú®–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π —Ç–µ—Ä–º–∏–Ω –∏ –ø–æ–ª—É—á–∏—Ç–µ ¬´–ø–µ—Ä–µ–≤–æ–¥¬ª —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º!‚ú®
'''
helpingText = '''
/help - –ü–æ–º–æ—â—å —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
/translate - –û–±—è—Å–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞
/start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥
/about - –£–∑–Ω–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞
/review - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
'''
aboutText = '''
–ö–∞–∫ –ø–æ—è–≤–∏–ª–∞—Å—å –∏–¥–µ—è?

–ú—ã —Å–ø—Ä–æ—Å–∏–ª–∏ HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, —á—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ –º–µ—à–∞–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—é. –û—Ç–≤–µ—Ç –æ–∫–∞–∑–∞–ª—Å—è –ø—Ä–æ—Å—Ç—ã–º: –∞–Ω–≥–ª–∏—Ü–∏–∑–º—ã –∏ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Å–ª–æ–≤–∞ ü§î
–≠—Ç–æ –º–µ—à–∞–ª–æ –Ω–æ–≤–∏—á–∫–∞–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –¥–∞–∂–µ –æ—Ç–ø—É–≥–∏–≤–∞–ª–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤. –ò–¥–µ—è —Å–æ–∑–¥–∞—Ç—å ¬´–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞¬ª —Å—Ä–∞–∑—É –Ω–∞—à–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî –±–æ–ª—å—à–µ 30% –æ–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∏ –µ—ë —Å —ç–Ω—Ç—É–∑–∏–∞–∑–º–æ–º üôå
–¢–∞–∫ —Ä–æ–¥–∏–ª–∞—Å—å –ò–Ω—Ñ–æ –ú–æ—Ç—è ‚Äî –ø—Ä–æ—Å—Ç–æ–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ª—ë–≥–∫–∏—Ö HR-–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π ‚ú®
'''

systemPromt = "–¢—ã - –±–æ—Ç –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª–æ–≤, –∞–Ω–≥–ª–∏—Ü–∏–∑–º–æ–≤ –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–≥–æ/–º–æ–ª–æ–¥–µ–∂–Ω–æ–≥–æ —Å–ª–µ–Ω–≥–∞, –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤ HR —Å—Ñ–µ—Ä–µ. –û–±—ä—è—Å–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ—Ä–∞–∑—ã-–∞–Ω–≥–ª–∏—Ü–∏–∑–º–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ —á–µ–ª–æ–≤–µ–∫—É —Å—Ç–∞—Ä—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç—ã–µ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏–∑ —Å–æ–≤–µ—Ç—Å–∫–æ–≥–æ/—Ä—É—Å—Å–∫–æ–≥–æ –±—ã—Ç–∞, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ. –ü—Ä–∏–≤–µ–¥–∏ 1-2 –ø—Ä–∏–º–µ—Ä–∞ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è. –ï—Å–ª–∏ —Å–ª–æ–≤–æ –∏–º–µ–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π, —É–∫–∞–∂–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–º, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤, –º–∞–∫—Å–∏–º—É–º –Ω–∞ 5-7 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Ç—ã, –∏–ø–æ–ª—å–∑—É–π –≤–µ–∂–ª–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ."

url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
headers = {
    "Content-Type" : "application/json",
    "Authorization" : f"Api-Key {yacloudtoken}"
}

def Response():
    promt = {
    "modelUri" : "gpt://b1g2ni26cv1m5sa1fkvv/yandexgpt-lite",
    "completionOptions" : {
        "stream" : False,
        "temperature" : 0.6,
        "maxTokens" : "2000"
    },

    "messages" : [
        {
            "role" : "system",
            "text" : f"{systemPromt}"
        },
        {
            "role" : "user",
            "text" : f"{question.GetMessage()}"
        }        
    ]
    }
    try:
        response = requests.post(url, headers=headers, json=promt)
        if response and response.status_code == 200:
            return response.json()['result']['alternatives'][0]['message']['text']
        else:
            logger.error(f"–û—à–∏–±–∫–∞ API: {response.status_code if response else 'No response'}")
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ Response: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞."

@bot.message_handler(commands=['start'])
def handle_start(message):
    try:
        bot.send_message(message.chat.id, statringText)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_start: {e}")

@bot.message_handler(commands=['help'])
def handle_help(message):
    try:
        bot.send_message(message.chat.id, helpingText)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_help: {e}")

@bot.message_handler(commands=['about'])
def handle_about(message):
    try:
        bot.send_message(message.chat.id, aboutText)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_about: {e}")

def WriteReview(review):    
    try:
        if not review or len(review.strip()) < 3:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –æ—Ç–∑—ã–≤
            return False        
        with open(localReviewsName, "a", encoding="utf-8") as reviewsDoc:
            reviewsDoc.write(review[8:] + '\n' if review.startswith('/review ') else review + '\n')     
        if disk:
            try:                
                disk.upload(localReviewsName, "/tgBotMotya/reviews.txt", overwrite=True)
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫: {e}")        
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ WriteReview: {e}")
        return False

@bot.message_handler(commands=['review'])
def handle_review(message):
    try:
        text = message.text
        if text != "/review":
            success = WriteReview(text)
            reply = "–í–∞—à –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç! –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É" if success else "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤"
            bot.send_message(message.chat.id, reply)
        else:
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∑—ã–≤–∞")
            bot.register_next_step_handler(msg, process_review_step)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_review: {e}")

def process_review_step(message):
    try:
        success = WriteReview(" " * 8 + message.text)
        reply = "–í–∞—à –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç! –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É" if success else "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤"
        bot.send_message(message.chat.id, reply)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ process_review_step: {e}")

@bot.message_handler(commands=['translate'])
def handle_translate(message):
    try:
        text = message.text
        if text != "/translate":
            question.SetMessage(text[10:] if text.startswith('/translate') else text)
            response = Response()
            bot.send_message(message.chat.id, response)
        else:
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ/—Ñ—Ä–∞–∑—É –¥–ª—è –ø–æ—è—Å–Ω–µ–Ω–∏—è")
            bot.register_next_step_handler(msg, process_translate_step)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_translate: {e}")

def process_translate_step(message):
    try:
        question.SetMessage("–ü–µ—Ä–µ–≤–µ–¥–∏ " + message.text)
        response = Response()
        bot.send_message(message.chat.id, response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ process_translate_step: {e}")

@bot.message_handler()
def handle_all_messages(message):
    try:
        question.SetMessage(message.text)
        response = Response()
        bot.send_message(message.chat.id, response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_all_messages: {e}")

def main():
    while True:
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            bot.delete_webhook()
            bot.polling(non_stop=True, skip_pending=True)
        except Exception as e:
            logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            time.sleep(3)

if __name__ == "__main__":    
    if not os.path.exists(localReviewsName):
        try:
            with open(localReviewsName, 'w', encoding='utf-8') as f:
                f.write('')
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –æ—Ç–∑—ã–≤–æ–≤: {e}")
    
    main()
